<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-06T13:35:17 IST" name="Suite" finished-at="2024-07-06T13:40:14 IST" duration-ms="296279">
    <groups>
    </groups>
    <test started-at="2024-07-06T13:35:17 IST" name="Register_Validations" finished-at="2024-07-06T13:37:43 IST" duration-ms="145514">
      <class name="EcommerceProject.Test.Registrationexecution">
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:35:18 IST" name="openURL" finished-at="2024-07-06T13:35:28 IST" duration-ms="9982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="registerTest1(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:35:28 IST" name="registerTest1" data-provider="getDataOne" finished-at="2024-07-06T13:35:33 IST" duration-ms="5377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Month=August, Company=xyz, Email=Sujit5@gmail.com, Year=1999, FirstName=Sujit, LastName=K, Day=11, Password=pass@123, ConfirmPassword=pass@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest1 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:35:33 IST" name="closeBrowser" finished-at="2024-07-06T13:35:33 IST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:35:33 IST" name="openURL" finished-at="2024-07-06T13:35:43 IST" duration-ms="9500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="registerTest1(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:35:43 IST" name="registerTest1" data-provider="getDataOne" finished-at="2024-07-06T13:35:48 IST" duration-ms="5419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Month=August, Company=xyz, Email=Sujit6@gmail.com, Year=1999, FirstName=Sujit, LastName=K, Day=11, Password=pass@123, ConfirmPassword=pass@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest1 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:35:48 IST" name="closeBrowser" finished-at="2024-07-06T13:35:48 IST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:35:48 IST" name="openURL" finished-at="2024-07-06T13:35:58 IST" duration-ms="10094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="registerTest2(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:35:58 IST" name="registerTest2" data-provider="getDataTwo" finished-at="2024-07-06T13:36:01 IST" duration-ms="2336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Month=August, Company=xyz, Email= , Year=1999, FirstName=Sujit, LastName=dfj, Day=11, Password=pass@123, ConfirmPassword=pass@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest2 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:36:01 IST" name="closeBrowser" finished-at="2024-07-06T13:36:01 IST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:36:01 IST" name="openURL" finished-at="2024-07-06T13:36:10 IST" duration-ms="8485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="registerTest3(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:36:10 IST" name="registerTest3" data-provider="getDataThree" finished-at="2024-07-06T13:37:43 IST" duration-ms="93256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Month=August, Company=xsyz, Email=Sujit7@xyz.com, Year=1999, FirstName=Sujit, LastName=dfj, Day=11, Password=pass@123, ConfirmPassword=@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest3 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Registrationexecution@4f0f2942]" started-at="2024-07-06T13:37:43 IST" name="closeBrowser" finished-at="2024-07-06T13:37:43 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- EcommerceProject.Test.Registrationexecution -->
    </test> <!-- Register_Validations -->
    <test started-at="2024-07-06T13:37:43 IST" name="Login_Validations" finished-at="2024-07-06T13:38:22 IST" duration-ms="38455">
      <class name="EcommerceProject.Test.Loginexecution">
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Loginexecution@32115b28]" started-at="2024-07-06T13:37:43 IST" name="openURL" finished-at="2024-07-06T13:37:52 IST" duration-ms="8868" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="loginTest1(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Loginexecution@32115b28]" started-at="2024-07-06T13:37:52 IST" name="loginTest1" data-provider="getDataOne" finished-at="2024-07-06T13:37:56 IST" duration-ms="3985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{MailId=Sujit5@gmail.com, Password=pass@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest1 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Loginexecution@32115b28]" started-at="2024-07-06T13:37:56 IST" name="closeBrowser" finished-at="2024-07-06T13:37:56 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Loginexecution@32115b28]" started-at="2024-07-06T13:37:56 IST" name="openURL" finished-at="2024-07-06T13:38:07 IST" duration-ms="10920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="loginTest2(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Loginexecution@32115b28]" started-at="2024-07-06T13:38:07 IST" name="loginTest2" data-provider="getDataTwo" finished-at="2024-07-06T13:38:09 IST" duration-ms="2049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{MailId=Test, Password=pass@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest2 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Loginexecution@32115b28]" started-at="2024-07-06T13:38:09 IST" name="closeBrowser" finished-at="2024-07-06T13:38:10 IST" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Loginexecution@32115b28]" started-at="2024-07-06T13:38:10 IST" name="openURL" finished-at="2024-07-06T13:38:18 IST" duration-ms="8828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="loginTest3(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Loginexecution@32115b28]" started-at="2024-07-06T13:38:18 IST" name="loginTest3" data-provider="getDataThree" finished-at="2024-07-06T13:38:21 IST" duration-ms="2965" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{MailId=Sujit5@gmail.com, Password=123}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [The credentials provided are incorrect] but found [No customer account found]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [The credentials provided are incorrect] but found [No customer account found]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at EcommerceProject.Test.Loginexecution.loginTest3(Loginexecution.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest3 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Loginexecution@32115b28]" started-at="2024-07-06T13:38:22 IST" name="closeBrowser" finished-at="2024-07-06T13:38:22 IST" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- EcommerceProject.Test.Loginexecution -->
    </test> <!-- Login_Validations -->
    <test started-at="2024-07-06T13:38:22 IST" name="Main_Validations" finished-at="2024-07-06T13:38:42 IST" duration-ms="20162">
      <class name="EcommerceProject.Test.Mainexecution">
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Mainexecution@61710c6]" started-at="2024-07-06T13:38:22 IST" name="openURL" finished-at="2024-07-06T13:38:34 IST" duration-ms="11855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="mainTest1(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Mainexecution@61710c6]" started-at="2024-07-06T13:38:34 IST" name="mainTest1" data-provider="getData" finished-at="2024-07-06T13:38:42 IST" duration-ms="8074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Product=HP Spectre XT Pro UltraBook, MailId=Sujit5@gmail.com, Password=pass@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainTest1 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Mainexecution@61710c6]" started-at="2024-07-06T13:38:42 IST" name="closeBrowser" finished-at="2024-07-06T13:38:42 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- EcommerceProject.Test.Mainexecution -->
    </test> <!-- Main_Validations -->
    <test started-at="2024-07-06T13:38:42 IST" name="Cart_Validations" finished-at="2024-07-06T13:39:13 IST" duration-ms="31029">
      <class name="EcommerceProject.Test.Cartexecution">
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Cartexecution@68878f6d]" started-at="2024-07-06T13:38:42 IST" name="openURL" finished-at="2024-07-06T13:38:56 IST" duration-ms="14150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="cartTest1(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Cartexecution@68878f6d]" started-at="2024-07-06T13:38:56 IST" name="cartTest1" data-provider="getData" finished-at="2024-07-06T13:39:13 IST" duration-ms="16645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Product=Lenovo Thinkpad X1 Carbon Laptop, MailId=Sujit5@gmail.com, Password=pass@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cartTest1 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Cartexecution@68878f6d]" started-at="2024-07-06T13:39:13 IST" name="closeBrowser" finished-at="2024-07-06T13:39:13 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- EcommerceProject.Test.Cartexecution -->
    </test> <!-- Cart_Validations -->
    <test started-at="2024-07-06T13:39:13 IST" name="checkOut_Validations" finished-at="2024-07-06T13:40:14 IST" duration-ms="60438">
      <class name="EcommerceProject.Test.Checkoutexecution">
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Checkoutexecution@78fa769e]" started-at="2024-07-06T13:39:13 IST" name="openURL" finished-at="2024-07-06T13:39:21 IST" duration-ms="7906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="checkOutTest1(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Checkoutexecution@78fa769e]" started-at="2024-07-06T13:39:21 IST" name="checkOutTest1" data-provider="getDataOne" finished-at="2024-07-06T13:39:42 IST" duration-ms="20421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Company=NA, Email=Sam@gmail.com, FirstName=Sujit, ZipCode=123456, Address2=Address new two, Product=Samsung Series 9 NP900X4C Premium Ultrabook, City=NA, Address1=New Address, Phone= , Country=India, LastName=K, Fax=Test123, MailId=Sujit5@gmail.com, Password=pass@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOutTest1 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Checkoutexecution@78fa769e]" started-at="2024-07-06T13:39:42 IST" name="closeBrowser" finished-at="2024-07-06T13:39:42 IST" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openURL()[pri:0, instance:EcommerceProject.Test.Checkoutexecution@78fa769e]" started-at="2024-07-06T13:39:42 IST" name="openURL" finished-at="2024-07-06T13:39:55 IST" duration-ms="13573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openURL -->
        <test-method signature="chreckOutTest2(java.util.HashMap)[pri:0, instance:EcommerceProject.Test.Checkoutexecution@78fa769e]" started-at="2024-07-06T13:39:55 IST" name="chreckOutTest2" data-provider="getDataTwo" finished-at="2024-07-06T13:40:13 IST" duration-ms="17986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Company=NA, Email=Sam@gmail.com, FirstName=Sujit, ZipCode=123456, Address2=Address new two, Product=Asus N551JK-XO076H Laptop, City=NA, Address1=New Address, Phone=1234567891, Country=India, LastName=K, Fax=Test123, MailId=Sujit6@gmail.com, Password=pass@123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chreckOutTest2 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:EcommerceProject.Test.Checkoutexecution@78fa769e]" started-at="2024-07-06T13:40:13 IST" name="closeBrowser" finished-at="2024-07-06T13:40:14 IST" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- EcommerceProject.Test.Checkoutexecution -->
    </test> <!-- checkOut_Validations -->
  </suite> <!-- Suite -->
</testng-results>
